<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.StudentMapper">
	<!-- namespace属性值推荐写成类似完全限定名的形式 -->

	<!-- 根据Id查询User对象 id: 类似方法名 parameterType : 参数类型（可选） resultType : 返回值类型(可选) -->
	<sql id="name">
		name
	</sql>
	<select id="findName" resultType="Student">
		select
		<include refid="name"></include>
		from student

	</select>

	<select id="findById" parameterType="int" resultType="Student">
		select *
		from student where id = #{id}
	</select>

	<select id="findAll" resultType="Student">
		select * from student
	</select>
	<select id="findClass" resultType="Student">
		select s.* ,class_name
		`cl.className` from student s,t_class c
		where s.class_id=c.id

	</select>
	<select id="findByNameAndClassId" resultType="Student"
		parameterType="String">
		<!-- select * from student where name=#{name} and password=#{password} -->
		select * from student where name=#{name} and password=#{pwd}

	</select>
	<select id="findBy" resultType="Student" parameterType="map">
	select * from student
	<where>
		<if test=" name != null and name!='' ">
			name=#{name}
		</if>
		<if test=" pwd != null and pwd != '' ">
			and password=#{pwd}
		</if>


	</where>
</select>

	<select id="find" resultMap="hh">
		select s.*,class_name from student
		s,t_class c
		where s.class_id=c.id

	</select>
	<resultMap type="Student" id="hh">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="class_id" property="classId" />
		<association property="cl" javaType="StuClass">
			<id column="id" property="id" />
			<result column="class_name" property="className" />

		</association>
	</resultMap>
<!---->
	<insert id="save" parameterType="Student" useGeneratedKeys="true"
		keyProperty="id">
		insert into student
		(name,password,class_id)
		values
		(#{name},#{password},#{classId})
	</insert>
	<insert id="saveList" parameterType="list">
		insert into student (name,password,class_id)
		values
		<foreach collection="list" item="stu" separator=",">
			(#{stu.name},#{stu.password},#{stu.classId})

		</foreach>


	</insert>

	<!-- <delete id="delById" parameterType="int"> delete from student where 
		id = #{id} </delete> -->


</mapper>