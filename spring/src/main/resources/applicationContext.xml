<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">



    <!--开启自动扫描-->
    <context:component-scan base-package="com.kaishengit"/>
    <!--开启AOP注解-->
    <aop:aspectj-autoproxy/>


    <!--读取properties配置文件-->
    <context:property-placeholder location="classpath:config.properties"/>
    <!--配置数据库连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--配置jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--事务-->
    <!--JDBC事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启基于注解的事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>












    <bean id="class" class="com.kaishengit.dao.ClassDao">
        <constructor-arg name="name" value="三年一班">

        </constructor-arg>





    </bean>
        <!--依赖注入-->


    <bean id="pp" class="com.kaishengit.entity.Perpor"/>
    <!--<bean id="aop" class="com.kaishengit.entity.AopAspect"/>-->


    <!--<aop:config>
        <aop:aspect ref="aop">
            <aop:pointcut  id="aspect" expression="execution(* com.kaishengit..*.*(..))"/>
            <aop:after-returning method="afterAdvice"  pointcut-ref="aspect"/>
            <aop:before method="before" pointcut-ref="aspect" />
        </aop:aspect>
    </aop:config>-->
</beans>